@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{ var home = CurrentPage.Site(); }

@if (home.Children.Any())
{
    @* Get the first page in the children *@
    var naviLevel = home.Children.First().Level;
    
    @* Add in level for a CSS hook *@
    <ul class="nav navbar-nav level-@naviLevel">            
        @* For each child page under the home node *@
        @foreach (var childPage in home.Children.Where("Visible"))
        {   
            if (childPage.Children.Any())
            {                    
                <li class="dropdown @(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
					@if (childPage.DocumentTypeAlias == "LandingPage")
                    {
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                            @childPage.Name 
                            <span class="caret"></span>
                        </a>
                    	@childPages(childPage.Children.Where("Visible"))
					} else {
						<a href="@childPage.Url">@childPage.Name</a>
					}
                </li>
            } 
			else
            {
                <li class="@(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
                    <a href="@childPage.Url">@childPage.Name</a>
                </li>
            }            
        }
    </ul>
}

@helper childPages(dynamic pages)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        @* Get the first page in pages and get the level *@
        var naviLevel = pages.First().Level;
        
        @* Add in level for a CSS hook *@
        <ul class="dropdown-menu level-@(naviLevel)">
            @foreach (var page in pages)
            {
                <li>
                    <a href="@page.Url">@page.Name</a>
                    
                    @* if the current page has any children *@
                    @if (page.Children.Any())
                    {                        
                        @* Call our helper to display the children *@
                        @childPages(page.Children)
                    }
                </li>
            }
        </ul>
    }
}