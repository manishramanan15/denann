@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Portfolio>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "Master.cshtml";
}
<section class="bg-primary" id="@CurrentPage.Id">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-sm-8">
                @CurrentPage.BodyContent
            </div>
        </div>
    </div>
</section>


<section  id="@CurrentPage.Name.ToLower()">
    @{

        if (Model.Content.HasValue("Images"))
        {
            <div class="container">
                <div class="row">
                    <div class="col-lg-12 text-center">
                        <h2 class="section-heading">Images</h2>
                        <hr class="primary">
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row no-gutter popup-gallery">
                    @{
                        var imagesList = Model.Content.GetPropertyValue<string>
                            ("Images").Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries).Select(int.Parse);
                        var imagesCollection = Umbraco.TypedMedia(imagesList).Where(x => x != null);

                        foreach (var imageItem in imagesCollection)
                        {
                            var resizedUrl = String.Format("{0}?width=650&height=350&bgcolor=fff", imageItem.Url);

                            <div class="col-lg-4 col-sm-6">
                                <a href="@resizedUrl" class="portfolio-box">
                                    <img src="@resizedUrl" class="img-responsive" alt="@imageItem.Name">
                                </a>
                            </div>
                        }

                    }
                </div>

            </div>

                        }
    }
</section>

@{
    var node = Model.Content.AncestorOrSelf(2).Children.Where("Name = \"Contact\"").FirstOrDefault();
    Html.RenderPartial("Contact", node);

}